;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 19/12/2018 12:47:31
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28AA      	GOTO       170
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00B8      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00B9      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A0      	MOVWF      32
;EsclavoSensor.c,121 :: 		void interrupt(){
;EsclavoSensor.c,124 :: 		if (PIR1.RCIF==1){
0x000D	0x1E8C      	BTFSS      PIR1, 5
0x000E	0x2859      	GOTO       L_interrupt6
;EsclavoSensor.c,126 :: 		byteTrama = UART1_Read();                       //Lee el byte de la trama de peticion
0x000F	0x209F      	CALL       _UART1_Read
0x0010	0x0870      	MOVF       R0, 0
0x0011	0x00AD      	MOVWF      _byteTrama
;EsclavoSensor.c,128 :: 		if (banTI==0){
0x0012	0x0821      	MOVF       _banTI, 0
0x0013	0x3A00      	XORLW      0
0x0014	0x1D03      	BTFSS      STATUS, 2
0x0015	0x281D      	GOTO       L_interrupt7
;EsclavoSensor.c,129 :: 		if (bytetrama==0xB0){
0x0016	0x082D      	MOVF       _byteTrama, 0
0x0017	0x3AB0      	XORLW      176
0x0018	0x1D03      	BTFSS      STATUS, 2
0x0019	0x281D      	GOTO       L_interrupt8
;EsclavoSensor.c,130 :: 		banTI = 1;                                //Activa la bandera de inicio de trama
0x001A	0x3001      	MOVLW      1
0x001B	0x00A1      	MOVWF      _banTI
;EsclavoSensor.c,131 :: 		i1 = 0;
0x001C	0x01B3      	CLRF       _i1
;EsclavoSensor.c,132 :: 		}
L_interrupt8:
;EsclavoSensor.c,133 :: 		}
L_interrupt7:
;EsclavoSensor.c,135 :: 		if (banTI==1){
0x001D	0x0821      	MOVF       _banTI, 0
0x001E	0x3A01      	XORLW      1
0x001F	0x1D03      	BTFSS      STATUS, 2
0x0020	0x2842      	GOTO       L_interrupt9
;EsclavoSensor.c,136 :: 		if (byteTrama!=0xB1){                        //Verifica que el dato recibido sea diferente del primer byte del delimitador de final de trama
0x0021	0x082D      	MOVF       _byteTrama, 0
0x0022	0x3AB1      	XORLW      177
0x0023	0x1903      	BTFSC      STATUS, 2
0x0024	0x282D      	GOTO       L_interrupt10
;EsclavoSensor.c,137 :: 		pduSolicitud[i1] = byteTrama;             //Almacena el dato en la trama de respuesta
0x0025	0x0833      	MOVF       _i1, 0
0x0026	0x3E22      	ADDLW      _pduSolicitud
0x0027	0x0084      	MOVWF      FSR
0x0028	0x082D      	MOVF       _byteTrama, 0
0x0029	0x0080      	MOVWF      INDF
;EsclavoSensor.c,138 :: 		i1++;                                     //Aumenta el subindice en una unidad para permitir almacenar el siguiente dato del mensaje
0x002A	0x0AB3      	INCF       _i1, 1
;EsclavoSensor.c,139 :: 		banTF = 0;                                //Limpia la bandera de final de trama
0x002B	0x01AC      	CLRF       _banTF
;EsclavoSensor.c,140 :: 		} else {
0x002C	0x2838      	GOTO       L_interrupt11
L_interrupt10:
;EsclavoSensor.c,141 :: 		pduSolicitud[i1] = byteTrama;               //Almacena el dato en la trama de respuesta
0x002D	0x0833      	MOVF       _i1, 0
0x002E	0x3E22      	ADDLW      _pduSolicitud
0x002F	0x0084      	MOVWF      FSR
0x0030	0x082D      	MOVF       _byteTrama, 0
0x0031	0x0080      	MOVWF      INDF
;EsclavoSensor.c,142 :: 		banTF = 1;                                //Si el dato recibido es el primer byte de final de trama activa la bandera
0x0032	0x3001      	MOVLW      1
0x0033	0x00AC      	MOVWF      _banTF
;EsclavoSensor.c,143 :: 		T2CON.TMR2ON = 1;                         //Enciende el Timer2
0x0034	0x1512      	BSF        T2CON, 2
;EsclavoSensor.c,144 :: 		PR2 = 249;
0x0035	0x30F9      	MOVLW      249
0x0036	0x1683      	BSF        STATUS, 5
0x0037	0x0092      	MOVWF      PR2
;EsclavoSensor.c,145 :: 		}
L_interrupt11:
;EsclavoSensor.c,146 :: 		if (banTF==1){                               //Verifica que se cumpla la condicion de final de trama
0x0038	0x1283      	BCF        STATUS, 5
0x0039	0x082C      	MOVF       _banTF, 0
0x003A	0x3A01      	XORLW      1
0x003B	0x1D03      	BTFSS      STATUS, 2
0x003C	0x2842      	GOTO       L_interrupt12
;EsclavoSensor.c,147 :: 		banTI = 0;                                //Limpia la bandera de inicio de trama para no permitir que se almacene mas datos en la trama de respuesta
0x003D	0x01A1      	CLRF       _banTI
;EsclavoSensor.c,148 :: 		banTC = 1;                                //Activa la bandera de trama completa
0x003E	0x3001      	MOVLW      1
0x003F	0x00B6      	MOVWF      _banTC
;EsclavoSensor.c,149 :: 		PIR1.TMR2IF = 0;                          //Limpia la bandera de interrupcion por desbordamiento del TMR2
0x0040	0x108C      	BCF        PIR1, 1
;EsclavoSensor.c,150 :: 		T2CON.TMR2ON = 0;                         //Apaga el Timer2
0x0041	0x1112      	BCF        T2CON, 2
;EsclavoSensor.c,151 :: 		}
L_interrupt12:
;EsclavoSensor.c,152 :: 		}
L_interrupt9:
;EsclavoSensor.c,155 :: 		if (banTC==1){                                  //Verifica que se haya completado de llenar la trama de peticion
0x0042	0x0836      	MOVF       _banTC, 0
0x0043	0x3A01      	XORLW      1
0x0044	0x1D03      	BTFSS      STATUS, 2
0x0045	0x2858      	GOTO       L_interrupt13
;EsclavoSensor.c,156 :: 		pduIdEsclavo = pduSolicitud[1];
0x0046	0x0823      	MOVF       _pduSolicitud+1, 0
0x0047	0x00B7      	MOVWF      _pduIdEsclavo
;EsclavoSensor.c,157 :: 		if (pduIdEsclavo==idEsclavo){
0x0048	0x0823      	MOVF       _pduSolicitud+1, 0
0x0049	0x0631      	XORWF      _idEsclavo, 0
0x004A	0x1D03      	BTFSS      STATUS, 2
0x004B	0x2855      	GOTO       L_interrupt14
;EsclavoSensor.c,158 :: 		pduFuncion = pduSolicitud[2];
0x004C	0x0824      	MOVF       _pduSolicitud+2, 0
0x004D	0x00B4      	MOVWF      _pduFuncion
;EsclavoSensor.c,159 :: 		pduRegistro = pduSolicitud[3];
0x004E	0x0825      	MOVF       _pduSolicitud+3, 0
0x004F	0x00B5      	MOVWF      _pduRegistro
;EsclavoSensor.c,160 :: 		pduNumDatos = pduSolicitud[4];
0x0050	0x0826      	MOVF       _pduSolicitud+4, 0
0x0051	0x00B0      	MOVWF      _pduNumDatos
;EsclavoSensor.c,162 :: 		UART1_Write(0xAA);
0x0052	0x30AA      	MOVLW      170
0x0053	0x00BA      	MOVWF      FARG_UART1_Write_data_
0x0054	0x2095      	CALL       _UART1_Write
;EsclavoSensor.c,165 :: 		}
L_interrupt14:
;EsclavoSensor.c,167 :: 		banTI = 0;                                   //Limpia la bandera de inicio de trama
0x0055	0x01A1      	CLRF       _banTI
;EsclavoSensor.c,168 :: 		banTC = 0;                                   //Limpia la bandera de trama completa
0x0056	0x01B6      	CLRF       _banTC
;EsclavoSensor.c,169 :: 		i1 = 0;                                      //Limpia el subindice de trama
0x0057	0x01B3      	CLRF       _i1
;EsclavoSensor.c,170 :: 		}
L_interrupt13:
;EsclavoSensor.c,172 :: 		PIR1.RCIF=0;
0x0058	0x128C      	BCF        PIR1, 5
;EsclavoSensor.c,174 :: 		}
L_interrupt6:
;EsclavoSensor.c,176 :: 		}
L_end_interrupt:
L__interrupt18:
0x0059	0x0820      	MOVF       32, 0
0x005A	0x00F0      	MOVWF      R0
0x005B	0x0839      	MOVF       ___savePCLATH, 0
0x005C	0x008A      	MOVWF      PCLATH
0x005D	0x0E38      	SWAPF      ___saveSTATUS, 0
0x005E	0x0083      	MOVWF      STATUS
0x005F	0x0EFF      	SWAPF      R15, 1
0x0060	0x0E7F      	SWAPF      R15, 0
0x0061	0x0009      	RETFIE
; end of _interrupt
_UART1_Init:
;__Lib_UART_c67.c,2 :: 		
;__Lib_UART_c67.c,5 :: 		
0x0062	0x1683      	BSF        STATUS, 5
0x0063	0x1303      	BCF        STATUS, 6
0x0064	0x1698      	BSF        TXSTA, 5
;__Lib_UART_c67.c,6 :: 		
0x0065	0x3090      	MOVLW      144
0x0066	0x1283      	BCF        STATUS, 5
0x0067	0x0098      	MOVWF      RCSTA
;__Lib_UART_c67.c,7 :: 		
0x0068	0x1683      	BSF        STATUS, 5
0x0069	0x1787      	BSF        TRISC7_bit, BitPos(TRISC7_bit+0)
;__Lib_UART_c67.c,8 :: 		
0x006A	0x1307      	BCF        TRISC6_bit, BitPos(TRISC6_bit+0)
;__Lib_UART_c67.c,10 :: 		
L_UART1_Init0:
0x006B	0x1283      	BCF        STATUS, 5
0x006C	0x1E8C      	BTFSS      PIR1, 5
0x006D	0x2871      	GOTO       L_UART1_Init1
;__Lib_UART_c67.c,11 :: 		
0x006E	0x081A      	MOVF       RCREG, 0
0x006F	0x00F0      	MOVWF      R0
0x0070	0x286B      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,12 :: 		
L_end_UART1_Init:
0x0071	0x0008      	RETURN
; end of _UART1_Init
_ConfiguracionPrincipal:
;EsclavoSensor.c,72 :: 		void ConfiguracionPrincipal(){
;EsclavoSensor.c,74 :: 		ADCON1 = 0x07;
0x0072	0x3007      	MOVLW      7
0x0073	0x1683      	BSF        STATUS, 5
0x0074	0x1303      	BCF        STATUS, 6
0x0075	0x009F      	MOVWF      ADCON1
;EsclavoSensor.c,76 :: 		TRISA0_bit = 1;
0x0076	0x1405      	BSF        TRISA0_bit, BitPos(TRISA0_bit+0)
;EsclavoSensor.c,77 :: 		TRISA1_bit = 1;
0x0077	0x1485      	BSF        TRISA1_bit, BitPos(TRISA1_bit+0)
;EsclavoSensor.c,78 :: 		TRISB0_bit = 1;
0x0078	0x1406      	BSF        TRISB0_bit, BitPos(TRISB0_bit+0)
;EsclavoSensor.c,79 :: 		TRISB3_bit = 0;
0x0079	0x1186      	BCF        TRISB3_bit, BitPos(TRISB3_bit+0)
;EsclavoSensor.c,80 :: 		TRISC1_bit = 0;
0x007A	0x1087      	BCF        TRISC1_bit, BitPos(TRISC1_bit+0)
;EsclavoSensor.c,81 :: 		TRISC2_bit = 0;
0x007B	0x1107      	BCF        TRISC2_bit, BitPos(TRISC2_bit+0)
;EsclavoSensor.c,83 :: 		INTCON.GIE = 1;                                    //Habilita las interrupciones globales
0x007C	0x178B      	BSF        INTCON, 7
;EsclavoSensor.c,84 :: 		INTCON.PEIE = 1;                                   //Habilita las interrupciones perifericas
0x007D	0x170B      	BSF        INTCON, 6
;EsclavoSensor.c,87 :: 		UART1_Init(19200);
0x007E	0x3019      	MOVLW      25
0x007F	0x0099      	MOVWF      SPBRG
0x0080	0x1518      	BSF        TXSTA, 2
0x0081	0x2062      	CALL       _UART1_Init
;EsclavoSensor.c,88 :: 		PIE1.RCIE = 1;
0x0082	0x1683      	BSF        STATUS, 5
0x0083	0x168C      	BSF        PIE1, 5
;EsclavoSensor.c,91 :: 		INTCON.INTE = 1;                                   //Habilita la interrupcion externa
0x0084	0x160B      	BSF        INTCON, 4
;EsclavoSensor.c,92 :: 		INTCON.INTF = 0;                                   //Limpia la bandera de interrupcion externa
0x0085	0x108B      	BCF        INTCON, 1
;EsclavoSensor.c,93 :: 		OPTION_REG.INTEDG = 1;                             //Activa la interrupcion en el flanco de subida
0x0086	0x1701      	BSF        OPTION_REG, 6
;EsclavoSensor.c,95 :: 		Delay_ms(100);                                     //Espera hasta que se estabilicen los cambios
0x0087	0x3002      	MOVLW      2
0x0088	0x00FB      	MOVWF      R11
0x0089	0x3004      	MOVLW      4
0x008A	0x00FC      	MOVWF      R12
0x008B	0x30BA      	MOVLW      186
0x008C	0x00FD      	MOVWF      R13
L_ConfiguracionPrincipal0:
0x008D	0x0BFD      	DECFSZ     R13, 1
0x008E	0x288D      	GOTO       L_ConfiguracionPrincipal0
0x008F	0x0BFC      	DECFSZ     R12, 1
0x0090	0x288D      	GOTO       L_ConfiguracionPrincipal0
0x0091	0x0BFB      	DECFSZ     R11, 1
0x0092	0x288D      	GOTO       L_ConfiguracionPrincipal0
0x0093	0x0000      	NOP
;EsclavoSensor.c,97 :: 		}
L_end_ConfiguracionPrincipal:
0x0094	0x0008      	RETURN
; end of _ConfiguracionPrincipal
_UART1_Write:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,40 :: 		
L_UART1_Write3:
0x0095	0x1683      	BSF        STATUS, 5
0x0096	0x1303      	BCF        STATUS, 6
0x0097	0x1898      	BTFSC      TXSTA, 1
0x0098	0x289B      	GOTO       L_UART1_Write4
;__Lib_UART_c67.c,41 :: 		
0x0099	0x0000      	NOP
0x009A	0x2895      	GOTO       L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,42 :: 		
0x009B	0x1283      	BCF        STATUS, 5
0x009C	0x083A      	MOVF       FARG_UART1_Write_data_, 0
0x009D	0x0099      	MOVWF      TXREG
;__Lib_UART_c67.c,43 :: 		
L_end_UART1_Write:
0x009E	0x0008      	RETURN
; end of _UART1_Write
_UART1_Read:
;__Lib_UART_c67.c,21 :: 		
;__Lib_UART_c67.c,24 :: 		
0x009F	0x1283      	BCF        STATUS, 5
0x00A0	0x1303      	BCF        STATUS, 6
0x00A1	0x081A      	MOVF       RCREG, 0
0x00A2	0x00F1      	MOVWF      R1
;__Lib_UART_c67.c,25 :: 		
0x00A3	0x1C98      	BTFSS      RCSTA, 1
0x00A4	0x28A7      	GOTO       L_UART1_Read2
;__Lib_UART_c67.c,26 :: 		
0x00A5	0x1218      	BCF        RCSTA, 4
;__Lib_UART_c67.c,27 :: 		
0x00A6	0x1618      	BSF        RCSTA, 4
;__Lib_UART_c67.c,28 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,29 :: 		
0x00A7	0x0871      	MOVF       R1, 0
0x00A8	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Read:
0x00A9	0x0008      	RETURN
; end of _UART1_Read
_main:
;EsclavoSensor.c,179 :: 		void main() {
;EsclavoSensor.c,181 :: 		ConfiguracionPrincipal();
0x00AA	0x2072      	CALL       _ConfiguracionPrincipal
;EsclavoSensor.c,183 :: 		idEsclavo = 0x09;
0x00AB	0x3009      	MOVLW      9
0x00AC	0x1283      	BCF        STATUS, 5
0x00AD	0x00B1      	MOVWF      _idEsclavo
;EsclavoSensor.c,185 :: 		ECINT = 1;                                       //Se inicializa el pin ECINT en alto para evitar que envie un pulso al iniciar (probablemente ocacionado por el CCP)
0x00AE	0x1507      	BSF        RC2_bit, BitPos(RC2_bit+0)
;EsclavoSensor.c,187 :: 		i1 = 0;
0x00AF	0x01B3      	CLRF       _i1
;EsclavoSensor.c,188 :: 		x = 0;
0x00B0	0x01B2      	CLRF       _x
;EsclavoSensor.c,194 :: 		}
L_end_main:
0x00B1	0x28B1      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [94]    _interrupt
0x0062      [16]    _UART1_Init
0x0072      [35]    _ConfiguracionPrincipal
0x0095      [10]    _UART1_Write
0x009F      [11]    _UART1_Read
0x00AA       [8]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0007       [0]    ECINT
0x0007       [0]    RC2_bit
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x0012       [1]    T2CON
0x0018       [1]    RCSTA
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x0021       [1]    _banTI
0x0022      [10]    _pduSolicitud
0x002C       [1]    _banTF
0x002D       [1]    _byteTrama
0x002E       [2]    ___DoICPAddr
0x0030       [1]    _pduNumDatos
0x0031       [1]    _idEsclavo
0x0032       [1]    _x
0x0033       [1]    _i1
0x0034       [1]    _pduFuncion
0x0035       [1]    _pduRegistro
0x0036       [1]    _banTC
0x0037       [1]    _pduIdEsclavo
0x0038       [1]    ___saveSTATUS
0x0039       [1]    ___savePCLATH
0x003A       [1]    FARG_UART1_Write_data_
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [0]    TRISA0_bit
0x0085       [0]    TRISA1_bit
0x0086       [0]    TRISB0_bit
0x0086       [0]    TRISB3_bit
0x0087       [0]    TRISC1_bit
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC7_bit
0x0087       [0]    TRISC2_bit
0x008C       [1]    PIE1
0x0092       [1]    PR2
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
0x009F       [1]    ADCON1
