;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 15/1/2019 10:53:10
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF001EF1F  	GOTO        574
_interrupt:
;RPi_Simulacion.c,97 :: 		void interrupt(){
0x0008	0xF017C000  	MOVFF       R0, 23
0x000C	0xF016C00C  	MOVFF       R12, 22
0x0010	0xF015C00D  	MOVFF       R13, 21
;RPi_Simulacion.c,101 :: 		if (INTCON3.INT1IF==1){
0x0014	0xA0F0      	BTFSS       INTCON3, 0 
0x0016	0xD065      	BRA         L_interrupt5
;RPi_Simulacion.c,102 :: 		INTCON3.INT1IF = 0;                             //Limpia la badera de interrupcion externa
0x0018	0x90F0      	BCF         INTCON3, 0 
;RPi_Simulacion.c,106 :: 		funcionRpi = 0x01;                              //Funcion que se requiere realizar. 0x00:Lectura  0x01:Escritura
0x001A	0x0E01      	MOVLW       1
0x001C	0x6E1A      	MOVWF       _funcionRpi 
;RPi_Simulacion.c,107 :: 		direccionRpi = 0x09;                            //Direccion del esclavo destinatario de la peticion
0x001E	0x0E09      	MOVLW       9
0x0020	0x6E19      	MOVWF       _direccionRpi 
;RPi_Simulacion.c,108 :: 		registroRPi = 0x02;                             //Registro que se desea leer o escribir
0x0022	0x0E02      	MOVLW       2
0x0024	0x6E18      	MOVWF       _registroRPi 
;RPi_Simulacion.c,110 :: 		tramaSPI[0] = 0xB0;                             //Cabecera
0x0026	0x0EB0      	MOVLW       176
0x0028	0x6E1D      	MOVWF       _tramaSPI 
;RPi_Simulacion.c,111 :: 		tramaSPI[1] = direccionRpi;                     //Direccion
0x002A	0x0E09      	MOVLW       9
0x002C	0x6E1E      	MOVWF       _tramaSPI+1 
;RPi_Simulacion.c,112 :: 		tramaSPI[2] = funcionRpi;                       //Funcion
0x002E	0x0E01      	MOVLW       1
0x0030	0x6E1F      	MOVWF       _tramaSPI+2 
;RPi_Simulacion.c,113 :: 		tramaSPI[3] = registroRPi;                      //Registro
0x0032	0x0E02      	MOVLW       2
0x0034	0x6E20      	MOVWF       _tramaSPI+3 
;RPi_Simulacion.c,121 :: 		}else{
L_interrupt6:
;RPi_Simulacion.c,123 :: 		tipoDato = 0x02;                             //0x00: Short, 0x01: Entero, 0x02: Float
0x0036	0x0E02      	MOVLW       2
0x0038	0x6E1C      	MOVWF       _tipoDato 
;RPi_Simulacion.c,124 :: 		switch (tipoDato){
0x003A	0xD041      	BRA         L_interrupt8
;RPi_Simulacion.c,125 :: 		case 0:
L_interrupt10:
;RPi_Simulacion.c,126 :: 		numDatos = 1;
0x003C	0x0E01      	MOVLW       1
0x003E	0x6E1B      	MOVWF       _numDatos 
;RPi_Simulacion.c,127 :: 		tramaSPI[4] = numDatos;          //#Datos
0x0040	0x0E01      	MOVLW       1
0x0042	0x6E21      	MOVWF       _tramaSPI+4 
;RPi_Simulacion.c,128 :: 		tramaSPI[5] = 0x5C;              //Datos
0x0044	0x0E5C      	MOVLW       92
0x0046	0x6E22      	MOVWF       _tramaSPI+5 
;RPi_Simulacion.c,129 :: 		tramaSPI[numDatos+5] = 0xB1;
0x0048	0x0E06      	MOVLW       6
0x004A	0x6E00      	MOVWF       R0 
0x004C	0x0E00      	MOVLW       0
0x004E	0x6E01      	MOVWF       R1 
0x0050	0x0E1D      	MOVLW       _tramaSPI
0x0052	0x2400      	ADDWF       R0, 0 
0x0054	0x6EE1      	MOVWF       FSR1L 
0x0056	0x0E00      	MOVLW       hi_addr(_tramaSPI)
0x0058	0x2001      	ADDWFC      R1, 0 
0x005A	0x6EE2      	MOVWF       FSR1H 
0x005C	0x0EB1      	MOVLW       177
0x005E	0x6EE6      	MOVWF       POSTINC1 
;RPi_Simulacion.c,130 :: 		break;
0x0060	0xD037      	BRA         L_interrupt9
;RPi_Simulacion.c,131 :: 		case 1:
L_interrupt11:
;RPi_Simulacion.c,132 :: 		numDatos = 2;
0x0062	0x0E02      	MOVLW       2
0x0064	0x6E1B      	MOVWF       _numDatos 
;RPi_Simulacion.c,133 :: 		tramaSPI[4] = numDatos;          //#Datos
0x0066	0x0E02      	MOVLW       2
0x0068	0x6E21      	MOVWF       _tramaSPI+4 
;RPi_Simulacion.c,134 :: 		tramaSPI[5] = 0x5C;              //Datos
0x006A	0x0E5C      	MOVLW       92
0x006C	0x6E22      	MOVWF       _tramaSPI+5 
;RPi_Simulacion.c,135 :: 		tramaSPI[6] = 0x8F;
0x006E	0x0E8F      	MOVLW       143
0x0070	0x6E23      	MOVWF       _tramaSPI+6 
;RPi_Simulacion.c,136 :: 		tramaSPI[numDatos+5] = 0xB1;
0x0072	0x0E07      	MOVLW       7
0x0074	0x6E00      	MOVWF       R0 
0x0076	0x0E00      	MOVLW       0
0x0078	0x6E01      	MOVWF       R1 
0x007A	0x0E1D      	MOVLW       _tramaSPI
0x007C	0x2400      	ADDWF       R0, 0 
0x007E	0x6EE1      	MOVWF       FSR1L 
0x0080	0x0E00      	MOVLW       hi_addr(_tramaSPI)
0x0082	0x2001      	ADDWFC      R1, 0 
0x0084	0x6EE2      	MOVWF       FSR1H 
0x0086	0x0EB1      	MOVLW       177
0x0088	0x6EE6      	MOVWF       POSTINC1 
;RPi_Simulacion.c,137 :: 		break;
0x008A	0xD022      	BRA         L_interrupt9
;RPi_Simulacion.c,138 :: 		case 2:
L_interrupt12:
;RPi_Simulacion.c,139 :: 		numDatos = 4;
0x008C	0x0E04      	MOVLW       4
0x008E	0x6E1B      	MOVWF       _numDatos 
;RPi_Simulacion.c,140 :: 		tramaSPI[4] = numDatos;          //#Datos
0x0090	0x0E04      	MOVLW       4
0x0092	0x6E21      	MOVWF       _tramaSPI+4 
;RPi_Simulacion.c,141 :: 		tramaSPI[5] = 0x5C;              //Datos
0x0094	0x0E5C      	MOVLW       92
0x0096	0x6E22      	MOVWF       _tramaSPI+5 
;RPi_Simulacion.c,142 :: 		tramaSPI[6] = 0x8F;
0x0098	0x0E8F      	MOVLW       143
0x009A	0x6E23      	MOVWF       _tramaSPI+6 
;RPi_Simulacion.c,143 :: 		tramaSPI[7] = 0x58;
0x009C	0x0E58      	MOVLW       88
0x009E	0x6E24      	MOVWF       _tramaSPI+7 
;RPi_Simulacion.c,144 :: 		tramaSPI[8] = 0x83;
0x00A0	0x0E83      	MOVLW       131
0x00A2	0x6E25      	MOVWF       _tramaSPI+8 
;RPi_Simulacion.c,145 :: 		tramaSPI[numDatos+5] = 0xB1;
0x00A4	0x0E09      	MOVLW       9
0x00A6	0x6E00      	MOVWF       R0 
0x00A8	0x0E00      	MOVLW       0
0x00AA	0x6E01      	MOVWF       R1 
0x00AC	0x0E1D      	MOVLW       _tramaSPI
0x00AE	0x2400      	ADDWF       R0, 0 
0x00B0	0x6EE1      	MOVWF       FSR1L 
0x00B2	0x0E00      	MOVLW       hi_addr(_tramaSPI)
0x00B4	0x2001      	ADDWFC      R1, 0 
0x00B6	0x6EE2      	MOVWF       FSR1H 
0x00B8	0x0EB1      	MOVLW       177
0x00BA	0x6EE6      	MOVWF       POSTINC1 
;RPi_Simulacion.c,146 :: 		break;
0x00BC	0xD009      	BRA         L_interrupt9
;RPi_Simulacion.c,147 :: 		}
L_interrupt8:
0x00BE	0x501C      	MOVF        _tipoDato, 0 
0x00C0	0x0A00      	XORLW       0
0x00C2	0xE0BC      	BZ          L_interrupt10
0x00C4	0x501C      	MOVF        _tipoDato, 0 
0x00C6	0x0A01      	XORLW       1
0x00C8	0xE0CC      	BZ          L_interrupt11
0x00CA	0x501C      	MOVF        _tipoDato, 0 
0x00CC	0x0A02      	XORLW       2
0x00CE	0xE0DE      	BZ          L_interrupt12
L_interrupt9:
;RPi_Simulacion.c,149 :: 		EnviarMensajeSPI(tramaSPI,(numDatos+6));
0x00D0	0x0E1D      	MOVLW       _tramaSPI
0x00D2	0x0100      	MOVLB       0
0x00D4	0x6F71      	MOVWF       FARG_EnviarMensajeSPI_trama, 1
0x00D6	0x0E00      	MOVLW       hi_addr(_tramaSPI)
0x00D8	0x6F72      	MOVWF       FARG_EnviarMensajeSPI_trama+1, 1
0x00DA	0x0E06      	MOVLW       6
0x00DC	0x241B      	ADDWF       _numDatos, 0 
0x00DE	0x6F73      	MOVWF       FARG_EnviarMensajeSPI_sizePDU, 1
0x00E0	0xD860      	RCALL       _EnviarMensajeSPI
;RPi_Simulacion.c,153 :: 		}
L_interrupt5:
;RPi_Simulacion.c,154 :: 		}
L_end_interrupt:
L__interrupt17:
0x00E2	0xF000C017  	MOVFF       23, R0
0x00E6	0xF00CC016  	MOVFF       22, R12
0x00EA	0xF00DC015  	MOVFF       21, R13
0x00EE	0x0011      	RETFIE      1
; end of _interrupt
_UART1_Init:
;__Lib_UART_c67b67.c,20 :: 		
;__Lib_UART_c67b67.c,23 :: 		
0x00F0	0x0EFF      	MOVLW       _UART1_Write
0x00F2	0x0100      	MOVLB       0
0x00F4	0x6F69      	MOVWF       _UART_Wr_Ptr, 1
0x00F6	0x0EFF      	MOVLW       hi_addr(_UART1_Write)
0x00F8	0x6F6A      	MOVWF       _UART_Wr_Ptr+1, 1
0x00FA	0x0EFF      	MOVLW       FARG_UART1_Write_data_
0x00FC	0x6F6B      	MOVWF       _UART_Wr_Ptr+2, 1
0x00FE	0x0EFF      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x0100	0x6F6C      	MOVWF       _UART_Wr_Ptr+3, 1
;__Lib_UART_c67b67.c,24 :: 		
0x0102	0x0EFF      	MOVLW       _UART1_Read
0x0104	0x6F61      	MOVWF       _UART_Rd_Ptr, 1
0x0106	0x0EFF      	MOVLW       hi_addr(_UART1_Read)
0x0108	0x6F62      	MOVWF       _UART_Rd_Ptr+1, 1
0x010A	0x0E00      	MOVLW       0
0x010C	0x6F63      	MOVWF       _UART_Rd_Ptr+2, 1
0x010E	0x0E00      	MOVLW       0
0x0110	0x6F64      	MOVWF       _UART_Rd_Ptr+3, 1
;__Lib_UART_c67b67.c,25 :: 		
0x0112	0x0EFF      	MOVLW       _UART1_Data_Ready
0x0114	0x6E5B      	MOVWF       _UART_Rdy_Ptr 
0x0116	0x0EFF      	MOVLW       hi_addr(_UART1_Data_Ready)
0x0118	0x6E5C      	MOVWF       _UART_Rdy_Ptr+1 
0x011A	0x0E00      	MOVLW       0
0x011C	0x6E5D      	MOVWF       _UART_Rdy_Ptr+2 
0x011E	0x0E00      	MOVLW       0
0x0120	0x6E5E      	MOVWF       _UART_Rdy_Ptr+3 
;__Lib_UART_c67b67.c,26 :: 		
0x0122	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x0124	0x6F65      	MOVWF       _UART_Tx_Idle_Ptr, 1
0x0126	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x0128	0x6F66      	MOVWF       _UART_Tx_Idle_Ptr+1, 1
0x012A	0x0E00      	MOVLW       0
0x012C	0x6F67      	MOVWF       _UART_Tx_Idle_Ptr+2, 1
0x012E	0x0E00      	MOVLW       0
0x0130	0x6F68      	MOVWF       _UART_Tx_Idle_Ptr+3, 1
;__Lib_UART_c67b67.c,28 :: 		
0x0132	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67b67.c,29 :: 		
0x0134	0x0E90      	MOVLW       144
0x0136	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67b67.c,30 :: 		
0x0138	0x8E94      	BSF         TRISC7_bit, BitPos(TRISC7_bit+0) 
;__Lib_UART_c67b67.c,31 :: 		
0x013A	0x9C94      	BCF         TRISC6_bit, BitPos(TRISC6_bit+0) 
;__Lib_UART_c67b67.c,33 :: 		
L_UART1_Init0:
0x013C	0xAA9E      	BTFSS       PIR1, 5 
0x013E	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67b67.c,34 :: 		
0x0140	0xF000CFAE  	MOVFF       RCREG, R0
0x0144	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67b67.c,35 :: 		
L_end_UART1_Init:
0x0146	0x0012      	RETURN      0
; end of _UART1_Init
_SPI1_Init_Advanced:
;__Lib_SPI_c345b123.c,43 :: 		
;__Lib_SPI_c345b123.c,44 :: 		
0x0148	0x9AC6      	BCF         SSP1CON1, 5 
;__Lib_SPI_c345b123.c,45 :: 		
0x014A	0x0EFF      	MOVLW       _SPI1_Read
0x014C	0x6E4F      	MOVWF       _SPI_Rd_Ptr 
0x014E	0x0EFF      	MOVLW       hi_addr(_SPI1_Read)
0x0150	0x6E50      	MOVWF       _SPI_Rd_Ptr+1 
0x0152	0x0EFF      	MOVLW       FARG_SPI1_Read_buffer
0x0154	0x6E51      	MOVWF       _SPI_Rd_Ptr+2 
0x0156	0x0EFF      	MOVLW       hi_addr(FARG_SPI1_Read_buffer)
0x0158	0x6E52      	MOVWF       _SPI_Rd_Ptr+3 
;__Lib_SPI_c345b123.c,46 :: 		
0x015A	0x0EFF      	MOVLW       _SPI1_Write
0x015C	0x6E57      	MOVWF       _SPI_Wr_Ptr 
0x015E	0x0EFF      	MOVLW       hi_addr(_SPI1_Write)
0x0160	0x6E58      	MOVWF       _SPI_Wr_Ptr+1 
0x0162	0x0EFF      	MOVLW       FARG_SPI1_Write_data_
0x0164	0x6E59      	MOVWF       _SPI_Wr_Ptr+2 
0x0166	0x0EFF      	MOVLW       hi_addr(FARG_SPI1_Write_data_)
0x0168	0x6E5A      	MOVWF       _SPI_Wr_Ptr+3 
;__Lib_SPI_c345b123.c,48 :: 		
0x016A	0x9A94      	BCF         TRISC5_bit, BitPos(TRISC5_bit+0) 
;__Lib_SPI_c345b123.c,49 :: 		
0x016C	0x0100      	MOVLB       0
0x016E	0x516D      	MOVF        FARG_SPI1_Init_Advanced_master, 0, 1
0x0170	0x0A04      	XORLW       4
0x0172	0xE102      	BNZ         L_SPI1_Init_Advanced0
0x0174	0x8694      	BSF         TRISC3_bit, BitPos(TRISC3_bit+0) 
0x0176	0xD001      	BRA         L_SPI1_Init_Advanced1
L_SPI1_Init_Advanced0:
;__Lib_SPI_c345b123.c,50 :: 		
0x0178	0x9694      	BCF         TRISC3_bit, BitPos(TRISC3_bit+0) 
L_SPI1_Init_Advanced1:
;__Lib_SPI_c345b123.c,51 :: 		
0x017A	0x8894      	BSF         TRISC4_bit, BitPos(TRISC4_bit+0) 
;__Lib_SPI_c345b123.c,53 :: 		
0x017C	0x6AC6      	CLRF        SSP1CON1 
;__Lib_SPI_c345b123.c,54 :: 		
0x017E	0x516D      	MOVF        FARG_SPI1_Init_Advanced_master, 0, 1
0x0180	0x12C6      	IORWF       SSP1CON1, 1 
;__Lib_SPI_c345b123.c,55 :: 		
0x0182	0x516F      	MOVF        FARG_SPI1_Init_Advanced_clock_idle, 0, 1
0x0184	0x12C6      	IORWF       SSP1CON1, 1 
;__Lib_SPI_c345b123.c,56 :: 		
0x0186	0x516E      	MOVF        FARG_SPI1_Init_Advanced_data_sample, 0, 1
0x0188	0x12C7      	IORWF       SSP1STAT, 1 
;__Lib_SPI_c345b123.c,58 :: 		
0x018A	0x536F      	MOVF        FARG_SPI1_Init_Advanced_clock_idle, 1, 1
0x018C	0xE005      	BZ          L_SPI1_Init_Advanced2
;__Lib_SPI_c345b123.c,59 :: 		
0x018E	0x5170      	MOVF        FARG_SPI1_Init_Advanced_transmit_edge, 0, 1
0x0190	0x0A00      	XORLW       0
0x0192	0xB4D8      	BTFSC       STATUS, 2 
;__Lib_SPI_c345b123.c,60 :: 		
0x0194	0x8CC7      	BSF         SSP1STAT, 6 
L_SPI1_Init_Advanced3:
;__Lib_SPI_c345b123.c,61 :: 		
0x0196	0xD003      	BRA         L_SPI1_Init_Advanced4
L_SPI1_Init_Advanced2:
;__Lib_SPI_c345b123.c,63 :: 		
0x0198	0x5370      	MOVF        FARG_SPI1_Init_Advanced_transmit_edge, 1, 1
0x019A	0xA4D8      	BTFSS       STATUS, 2 
;__Lib_SPI_c345b123.c,64 :: 		
0x019C	0x8CC7      	BSF         SSP1STAT, 6 
L_SPI1_Init_Advanced5:
;__Lib_SPI_c345b123.c,65 :: 		
L_SPI1_Init_Advanced4:
;__Lib_SPI_c345b123.c,66 :: 		
0x019E	0x8AC6      	BSF         SSP1CON1, 5 
;__Lib_SPI_c345b123.c,67 :: 		
L_end_SPI1_Init_Advanced:
0x01A0	0x0012      	RETURN      0
; end of _SPI1_Init_Advanced
_EnviarMensajeSPI:
;RPi_Simulacion.c,86 :: 		void EnviarMensajeSPI(unsigned char *trama, unsigned short sizePDU){
;RPi_Simulacion.c,87 :: 		CS = 0;
0x01A2	0x9482      	BCF         RC2_bit, BitPos(RC2_bit+0) 
;RPi_Simulacion.c,88 :: 		for (x=0;x<sizePDU;x++){
0x01A4	0x6A5F      	CLRF        _x 
L_EnviarMensajeSPI1:
0x01A6	0x0E80      	MOVLW       128
0x01A8	0xBE5F      	BTFSC       _x, 7 
0x01AA	0x0E7F      	MOVLW       127
0x01AC	0x6E00      	MOVWF       R0 
0x01AE	0x0E80      	MOVLW       128
0x01B0	0x5C00      	SUBWF       R0, 0 
0x01B2	0xE103      	BNZ         L__EnviarMensajeSPI15
0x01B4	0x0100      	MOVLB       0
0x01B6	0x5173      	MOVF        FARG_EnviarMensajeSPI_sizePDU, 0, 1
0x01B8	0x5C5F      	SUBWF       _x, 0 
L__EnviarMensajeSPI15:
0x01BA	0xE217      	BC          L_EnviarMensajeSPI2
;RPi_Simulacion.c,89 :: 		SSPBUF = trama[x];                             //Llena el buffer de salida con cada valor de la tramaSPI
0x01BC	0x0100      	MOVLB       0
0x01BE	0x505F      	MOVF        _x, 0 
0x01C0	0x2571      	ADDWF       FARG_EnviarMensajeSPI_trama, 0, 1
0x01C2	0x6EE9      	MOVWF       FSR0L 
0x01C4	0x0E00      	MOVLW       0
0x01C6	0xBE5F      	BTFSC       _x, 7 
0x01C8	0x0EFF      	MOVLW       255
0x01CA	0x2172      	ADDWFC      FARG_EnviarMensajeSPI_trama+1, 0, 1
0x01CC	0x6EEA      	MOVWF       FSR0H 
0x01CE	0xFFC9CFEE  	MOVFF       POSTINC0, SSPBUF
;RPi_Simulacion.c,90 :: 		Delay_ms(1);
0x01D2	0x0E03      	MOVLW       3
0x01D4	0x6E0C      	MOVWF       R12, 0
0x01D6	0x0E97      	MOVLW       151
0x01D8	0x6E0D      	MOVWF       R13, 0
L_EnviarMensajeSPI4:
0x01DA	0x2E0D      	DECFSZ      R13, 1, 0
0x01DC	0xD7FE      	BRA         L_EnviarMensajeSPI4
0x01DE	0x2E0C      	DECFSZ      R12, 1, 0
0x01E0	0xD7FC      	BRA         L_EnviarMensajeSPI4
0x01E2	0x0000      	NOP
0x01E4	0x0000      	NOP
;RPi_Simulacion.c,88 :: 		for (x=0;x<sizePDU;x++){
0x01E6	0x2A5F      	INCF        _x, 1 
;RPi_Simulacion.c,91 :: 		}
0x01E8	0xD7DE      	BRA         L_EnviarMensajeSPI1
L_EnviarMensajeSPI2:
;RPi_Simulacion.c,92 :: 		CS = 1;
0x01EA	0x8482      	BSF         RC2_bit, BitPos(RC2_bit+0) 
;RPi_Simulacion.c,93 :: 		}
L_end_EnviarMensajeSPI:
0x01EC	0x0012      	RETURN      0
; end of _EnviarMensajeSPI
_ConfiguracionPrincipal:
;RPi_Simulacion.c,52 :: 		void ConfiguracionPrincipal(){
;RPi_Simulacion.c,54 :: 		ANSELB = 0;                                       //Configura PORTB como digital
0x01EE	0x010F      	MOVLB       15
0x01F0	0x6B39      	CLRF        ANSELB, 1
;RPi_Simulacion.c,55 :: 		ANSELC = 0;                                       //Configura PORTC como digital
0x01F2	0x6B3A      	CLRF        ANSELC, 1
;RPi_Simulacion.c,57 :: 		TRISB0_bit = 1;
0x01F4	0x8093      	BSF         TRISB0_bit, BitPos(TRISB0_bit+0) 
;RPi_Simulacion.c,58 :: 		TRISB1_bit = 1;
0x01F6	0x8293      	BSF         TRISB1_bit, BitPos(TRISB1_bit+0) 
;RPi_Simulacion.c,59 :: 		TRISC2_bit = 0;
0x01F8	0x9494      	BCF         TRISC2_bit, BitPos(TRISC2_bit+0) 
;RPi_Simulacion.c,61 :: 		INTCON.GIE = 1;                                    //Habilita las interrupciones globales
0x01FA	0x8EF2      	BSF         INTCON, 7 
;RPi_Simulacion.c,62 :: 		INTCON.PEIE = 1;                                   //Habilita las interrupciones perifericas
0x01FC	0x8CF2      	BSF         INTCON, 6 
;RPi_Simulacion.c,65 :: 		UART1_Init(19200);                                 //Inicializa el UART1 a 19200 bps
0x01FE	0x86B8      	BSF         BAUDCON, 3, 0
0x0200	0x6AB0      	CLRF        SPBRGH 
0x0202	0x0E67      	MOVLW       103
0x0204	0x6EAF      	MOVWF       SPBRG 
0x0206	0x84AC      	BSF         TXSTA, 2, 0
0x0208	0xDF73      	RCALL       _UART1_Init
;RPi_Simulacion.c,68 :: 		SPI1_Init_Advanced(_SPI_MASTER_OSC_DIV64,_SPI_DATA_SAMPLE_MIDDLE,_SPI_CLK_IDLE_HIGH,_SPI_LOW_2_HIGH);
0x020A	0x0E02      	MOVLW       2
0x020C	0x6F6D      	MOVWF       FARG_SPI1_Init_Advanced_master, 1
0x020E	0x6B6E      	CLRF        FARG_SPI1_Init_Advanced_data_sample, 1
0x0210	0x0E10      	MOVLW       16
0x0212	0x6F6F      	MOVWF       FARG_SPI1_Init_Advanced_clock_idle, 1
0x0214	0x0E01      	MOVLW       1
0x0216	0x6F70      	MOVWF       FARG_SPI1_Init_Advanced_transmit_edge, 1
0x0218	0xDF97      	RCALL       _SPI1_Init_Advanced
;RPi_Simulacion.c,71 :: 		INTCON.INT0IE = 1;                                 //Habilita la interrupcion externa INT0
0x021A	0x88F2      	BSF         INTCON, 4 
;RPi_Simulacion.c,72 :: 		INTCON.INT0IF = 0;                                 //Limpia la bandera de interrupcion externa INT0
0x021C	0x92F2      	BCF         INTCON, 1 
;RPi_Simulacion.c,73 :: 		INTCON3.INT1IE = 1;                                //Habilita la interrupcion externa INT1
0x021E	0x86F0      	BSF         INTCON3, 3 
;RPi_Simulacion.c,74 :: 		INTCON3.INT1IF = 0;                                //Limpia la bandera de interrupcion externa INT1
0x0220	0x90F0      	BCF         INTCON3, 0 
;RPi_Simulacion.c,78 :: 		Delay_ms(100);                                     //Espera hasta que se estabilicen los cambios
0x0222	0x0E02      	MOVLW       2
0x0224	0x6E0B      	MOVWF       R11, 0
0x0226	0x0E04      	MOVLW       4
0x0228	0x6E0C      	MOVWF       R12, 0
0x022A	0x0EBA      	MOVLW       186
0x022C	0x6E0D      	MOVWF       R13, 0
L_ConfiguracionPrincipal0:
0x022E	0x2E0D      	DECFSZ      R13, 1, 0
0x0230	0xD7FE      	BRA         L_ConfiguracionPrincipal0
0x0232	0x2E0C      	DECFSZ      R12, 1, 0
0x0234	0xD7FC      	BRA         L_ConfiguracionPrincipal0
0x0236	0x2E0B      	DECFSZ      R11, 1, 0
0x0238	0xD7FA      	BRA         L_ConfiguracionPrincipal0
0x023A	0x0000      	NOP
;RPi_Simulacion.c,80 :: 		}
L_end_ConfiguracionPrincipal:
0x023C	0x0012      	RETURN      0
; end of _ConfiguracionPrincipal
_main:
;RPi_Simulacion.c,157 :: 		void main() {
;RPi_Simulacion.c,159 :: 		ConfiguracionPrincipal();
0x023E	0xDFD7      	RCALL       _ConfiguracionPrincipal
;RPi_Simulacion.c,160 :: 		CS = 1;
0x0240	0x8482      	BSF         RC2_bit, BitPos(RC2_bit+0) 
;RPi_Simulacion.c,161 :: 		byteTrama = 0;                                       //Limpia la variable del byte de la trama de peticion
0x0242	0x6A55      	CLRF        _byteTrama 
;RPi_Simulacion.c,162 :: 		banTI = 0;                                           //Limpia la bandera de inicio de trama
0x0244	0x6A56      	CLRF        _banTI 
;RPi_Simulacion.c,163 :: 		banTC = 0;                                           //Limpia la bandera de trama completa
0x0246	0x6A53      	CLRF        _banTC 
;RPi_Simulacion.c,164 :: 		banTF = 0;                                           //Limpia la bandera de final de trama
0x0248	0x6A54      	CLRF        _banTF 
;RPi_Simulacion.c,166 :: 		}
L_end_main:
0x024A	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008     [232]    _interrupt
0x00F0      [88]    _UART1_Init
0x0148      [90]    _SPI1_Init_Advanced
0x01A2      [76]    _EnviarMensajeSPI
0x01EE      [80]    _ConfiguracionPrincipal
0x023E      [14]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    SPI2_Write_tmp_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    UART2_Init_tmp_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    R0
0x0001       [1]    UART2_Read___tmp_UART2_Read_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0018       [1]    _registroRPi
0x0019       [1]    _direccionRpi
0x001A       [1]    _funcionRpi
0x001B       [1]    _numDatos
0x001C       [1]    _tipoDato
0x001D      [50]    _tramaSPI
0x004F       [4]    _SPI_Rd_Ptr
0x0053       [1]    _banTC
0x0054       [1]    _banTF
0x0055       [1]    _byteTrama
0x0056       [1]    _banTI
0x0057       [4]    _SPI_Wr_Ptr
0x005B       [4]    _UART_Rdy_Ptr
0x005F       [1]    _x
0x0061       [4]    _UART_Rd_Ptr
0x0065       [4]    _UART_Tx_Idle_Ptr
0x0069       [4]    _UART_Wr_Ptr
0x006D       [1]    FARG_SPI1_Init_Advanced_master
0x006E       [1]    FARG_SPI1_Init_Advanced_data_sample
0x006F       [1]    FARG_SPI1_Init_Advanced_clock_idle
0x0070       [1]    FARG_SPI1_Init_Advanced_transmit_edge
0x0071       [2]    FARG_EnviarMensajeSPI_trama
0x0073       [1]    FARG_EnviarMensajeSPI_sizePDU
0x0F39       [1]    ANSELB
0x0F3A       [1]    ANSELC
0x0F82       [0]    RC2_bit
0x0F82       [0]    CS
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    TRISB1_bit
0x0F94       [0]    TRISC4_bit
0x0F94       [0]    TRISC3_bit
0x0F94       [0]    TRISC5_bit
0x0F94       [0]    TRISC6_bit
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    TRISC2_bit
0x0F9E       [1]    PIR1
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB8       [1]    BAUDCON
0x0FC6       [1]    SSP1CON1
0x0FC7       [1]    SSP1STAT
0x0FC9       [1]    SSPBUF
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF0       [1]    INTCON3
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
