;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 8/2/2019 16:19:30
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF001EF13  	GOTO        550
_interrupt:
;RPi_Simulacion.c,177 :: 		void interrupt(){
0x0008	0xF017C000  	MOVFF       R0, 23
0x000C	0xF016C00C  	MOVFF       R12, 22
0x0010	0xF015C00D  	MOVFF       R13, 21
;RPi_Simulacion.c,181 :: 		if (INTCON3.INT1IF==1){
0x0014	0xF018CFE9  	MOVFF       FSR0L, 24
0x0018	0xF019CFEA  	MOVFF       FSR0H, 25
0x001C	0xA0F0      	BTFSS       INTCON3, 0 
0x001E	0xD017      	BRA         L_interrupt33
;RPi_Simulacion.c,182 :: 		INTCON3.INT1IF = 0;                             //Limpia la badera de interrupcion externa
0x0020	0x90F0      	BCF         INTCON3, 0 
;RPi_Simulacion.c,186 :: 		funcionRpi = 0x00;                              //Funcion que se requiere realizar. 0x00:Lectura  0x01:Escritura
0x0022	0x6A3D      	CLRF        _funcionRpi 
;RPi_Simulacion.c,187 :: 		direccionRpi = 0x09;                            //Direccion del esclavo destinatario de la peticion
0x0024	0x0E09      	MOVLW       9
0x0026	0x6E43      	MOVWF       _direccionRpi 
;RPi_Simulacion.c,188 :: 		registroRPi = 0x02;                             //Registro que se desea leer o escribir
0x0028	0x0E02      	MOVLW       2
0x002A	0x6E46      	MOVWF       _registroRPi 
;RPi_Simulacion.c,190 :: 		tramaSPI[0] = 0xB0;                             //Cabecera
0x002C	0x0EB0      	MOVLW       176
0x002E	0x6E28      	MOVWF       _tramaSPI 
;RPi_Simulacion.c,191 :: 		tramaSPI[1] = direccionRpi;                     //Direccion
0x0030	0x0E09      	MOVLW       9
0x0032	0x6E29      	MOVWF       _tramaSPI+1 
;RPi_Simulacion.c,192 :: 		tramaSPI[2] = funcionRpi;                       //Funcion
0x0034	0x6A2A      	CLRF        _tramaSPI+2 
;RPi_Simulacion.c,193 :: 		tramaSPI[3] = registroRPi;                      //Registro
0x0036	0x0E02      	MOVLW       2
0x0038	0x6E2B      	MOVWF       _tramaSPI+3 
;RPi_Simulacion.c,197 :: 		tramaSPI[4] = 0x00;                          //#Datos
0x003A	0x6A2C      	CLRF        _tramaSPI+4 
;RPi_Simulacion.c,198 :: 		tramaSPI[5] = 0xB1;                          //Fin
0x003C	0x0EB1      	MOVLW       177
0x003E	0x6E2D      	MOVWF       _tramaSPI+5 
;RPi_Simulacion.c,199 :: 		EnviarMensajeSPI(tramaSPI,6);
0x0040	0x0E28      	MOVLW       _tramaSPI
0x0042	0x6E4F      	MOVWF       FARG_EnviarMensajeSPI_trama 
0x0044	0x0E00      	MOVLW       hi_addr(_tramaSPI)
0x0046	0x6E50      	MOVWF       FARG_EnviarMensajeSPI_trama+1 
0x0048	0x0E06      	MOVLW       6
0x004A	0x6E51      	MOVWF       FARG_EnviarMensajeSPI_sizePDU 
0x004C	0xD864      	RCALL       _EnviarMensajeSPI
;RPi_Simulacion.c,231 :: 		}
L_interrupt35:
;RPi_Simulacion.c,233 :: 		}
L_interrupt33:
;RPi_Simulacion.c,238 :: 		if (INTCON.INT0IF==1){
0x004E	0xB2F2      	BTFSC       INTCON, 1 
;RPi_Simulacion.c,239 :: 		INTCON.INT0IF = 0;                                //Limpia la badera de interrupcion externa
0x0050	0x92F2      	BCF         INTCON, 1 
;RPi_Simulacion.c,242 :: 		}
L_interrupt41:
;RPi_Simulacion.c,244 :: 		}
L_end_interrupt:
L__interrupt54:
0x0052	0xF000C017  	MOVFF       23, R0
0x0056	0xF00CC016  	MOVFF       22, R12
0x005A	0xF00DC015  	MOVFF       21, R13
0x005E	0xFFE9C018  	MOVFF       24, FSR0L
0x0062	0xFFEAC019  	MOVFF       25, FSR0H
0x0066	0x0011      	RETFIE      1
; end of _interrupt
_UART1_Init:
;__Lib_UART_c67b67.c,20 :: 		
;__Lib_UART_c67b67.c,23 :: 		
0x0068	0x0EFF      	MOVLW       _UART1_Write
0x006A	0x6E1F      	MOVWF       _UART_Wr_Ptr 
0x006C	0x0EFF      	MOVLW       hi_addr(_UART1_Write)
0x006E	0x6E20      	MOVWF       _UART_Wr_Ptr+1 
0x0070	0x0EFF      	MOVLW       FARG_UART1_Write_data_
0x0072	0x6E21      	MOVWF       _UART_Wr_Ptr+2 
0x0074	0x0EFF      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x0076	0x6E22      	MOVWF       _UART_Wr_Ptr+3 
;__Lib_UART_c67b67.c,24 :: 		
0x0078	0x0EFF      	MOVLW       _UART1_Read
0x007A	0x6E39      	MOVWF       _UART_Rd_Ptr 
0x007C	0x0EFF      	MOVLW       hi_addr(_UART1_Read)
0x007E	0x6E3A      	MOVWF       _UART_Rd_Ptr+1 
0x0080	0x0E00      	MOVLW       0
0x0082	0x6E3B      	MOVWF       _UART_Rd_Ptr+2 
0x0084	0x0E00      	MOVLW       0
0x0086	0x6E3C      	MOVWF       _UART_Rd_Ptr+3 
;__Lib_UART_c67b67.c,25 :: 		
0x0088	0x0EFF      	MOVLW       _UART1_Data_Ready
0x008A	0x6E47      	MOVWF       _UART_Rdy_Ptr 
0x008C	0x0EFF      	MOVLW       hi_addr(_UART1_Data_Ready)
0x008E	0x6E48      	MOVWF       _UART_Rdy_Ptr+1 
0x0090	0x0E00      	MOVLW       0
0x0092	0x6E49      	MOVWF       _UART_Rdy_Ptr+2 
0x0094	0x0E00      	MOVLW       0
0x0096	0x6E4A      	MOVWF       _UART_Rdy_Ptr+3 
;__Lib_UART_c67b67.c,26 :: 		
0x0098	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x009A	0x6E3F      	MOVWF       _UART_Tx_Idle_Ptr 
0x009C	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x009E	0x6E40      	MOVWF       _UART_Tx_Idle_Ptr+1 
0x00A0	0x0E00      	MOVLW       0
0x00A2	0x6E41      	MOVWF       _UART_Tx_Idle_Ptr+2 
0x00A4	0x0E00      	MOVLW       0
0x00A6	0x6E42      	MOVWF       _UART_Tx_Idle_Ptr+3 
;__Lib_UART_c67b67.c,28 :: 		
0x00A8	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67b67.c,29 :: 		
0x00AA	0x0E90      	MOVLW       144
0x00AC	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67b67.c,30 :: 		
0x00AE	0x8E94      	BSF         TRISC7_bit, BitPos(TRISC7_bit+0) 
;__Lib_UART_c67b67.c,31 :: 		
0x00B0	0x9C94      	BCF         TRISC6_bit, BitPos(TRISC6_bit+0) 
;__Lib_UART_c67b67.c,33 :: 		
L_UART1_Init0:
0x00B2	0xAA9E      	BTFSS       PIR1, 5 
0x00B4	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67b67.c,34 :: 		
0x00B6	0xF000CFAE  	MOVFF       RCREG, R0
0x00BA	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67b67.c,35 :: 		
L_end_UART1_Init:
0x00BC	0x0012      	RETURN      0
; end of _UART1_Init
_SPI1_Init_Advanced:
;__Lib_SPI_c345b123.c,43 :: 		
;__Lib_SPI_c345b123.c,44 :: 		
0x00BE	0x9AC6      	BCF         SSP1CON1, 5 
;__Lib_SPI_c345b123.c,45 :: 		
0x00C0	0x0EFF      	MOVLW       _SPI1_Read
0x00C2	0x6E1A      	MOVWF       _SPI_Rd_Ptr 
0x00C4	0x0EFF      	MOVLW       hi_addr(_SPI1_Read)
0x00C6	0x6E1B      	MOVWF       _SPI_Rd_Ptr+1 
0x00C8	0x0EFF      	MOVLW       FARG_SPI1_Read_buffer
0x00CA	0x6E1C      	MOVWF       _SPI_Rd_Ptr+2 
0x00CC	0x0EFF      	MOVLW       hi_addr(FARG_SPI1_Read_buffer)
0x00CE	0x6E1D      	MOVWF       _SPI_Rd_Ptr+3 
;__Lib_SPI_c345b123.c,46 :: 		
0x00D0	0x0EFF      	MOVLW       _SPI1_Write
0x00D2	0x6E23      	MOVWF       _SPI_Wr_Ptr 
0x00D4	0x0EFF      	MOVLW       hi_addr(_SPI1_Write)
0x00D6	0x6E24      	MOVWF       _SPI_Wr_Ptr+1 
0x00D8	0x0EFF      	MOVLW       FARG_SPI1_Write_data_
0x00DA	0x6E25      	MOVWF       _SPI_Wr_Ptr+2 
0x00DC	0x0EFF      	MOVLW       hi_addr(FARG_SPI1_Write_data_)
0x00DE	0x6E26      	MOVWF       _SPI_Wr_Ptr+3 
;__Lib_SPI_c345b123.c,48 :: 		
0x00E0	0x9A94      	BCF         TRISC5_bit, BitPos(TRISC5_bit+0) 
;__Lib_SPI_c345b123.c,49 :: 		
0x00E2	0x504B      	MOVF        FARG_SPI1_Init_Advanced_master, 0 
0x00E4	0x0A04      	XORLW       4
0x00E6	0xE102      	BNZ         L_SPI1_Init_Advanced0
0x00E8	0x8694      	BSF         TRISC3_bit, BitPos(TRISC3_bit+0) 
0x00EA	0xD001      	BRA         L_SPI1_Init_Advanced1
L_SPI1_Init_Advanced0:
;__Lib_SPI_c345b123.c,50 :: 		
0x00EC	0x9694      	BCF         TRISC3_bit, BitPos(TRISC3_bit+0) 
L_SPI1_Init_Advanced1:
;__Lib_SPI_c345b123.c,51 :: 		
0x00EE	0x8894      	BSF         TRISC4_bit, BitPos(TRISC4_bit+0) 
;__Lib_SPI_c345b123.c,53 :: 		
0x00F0	0x6AC6      	CLRF        SSP1CON1 
;__Lib_SPI_c345b123.c,54 :: 		
0x00F2	0x504B      	MOVF        FARG_SPI1_Init_Advanced_master, 0 
0x00F4	0x12C6      	IORWF       SSP1CON1, 1 
;__Lib_SPI_c345b123.c,55 :: 		
0x00F6	0x504D      	MOVF        FARG_SPI1_Init_Advanced_clock_idle, 0 
0x00F8	0x12C6      	IORWF       SSP1CON1, 1 
;__Lib_SPI_c345b123.c,56 :: 		
0x00FA	0x504C      	MOVF        FARG_SPI1_Init_Advanced_data_sample, 0 
0x00FC	0x12C7      	IORWF       SSP1STAT, 1 
;__Lib_SPI_c345b123.c,58 :: 		
0x00FE	0x524D      	MOVF        FARG_SPI1_Init_Advanced_clock_idle, 1 
0x0100	0xE005      	BZ          L_SPI1_Init_Advanced2
;__Lib_SPI_c345b123.c,59 :: 		
0x0102	0x504E      	MOVF        FARG_SPI1_Init_Advanced_transmit_edge, 0 
0x0104	0x0A00      	XORLW       0
0x0106	0xB4D8      	BTFSC       STATUS, 2 
;__Lib_SPI_c345b123.c,60 :: 		
0x0108	0x8CC7      	BSF         SSP1STAT, 6 
L_SPI1_Init_Advanced3:
;__Lib_SPI_c345b123.c,61 :: 		
0x010A	0xD003      	BRA         L_SPI1_Init_Advanced4
L_SPI1_Init_Advanced2:
;__Lib_SPI_c345b123.c,63 :: 		
0x010C	0x524E      	MOVF        FARG_SPI1_Init_Advanced_transmit_edge, 1 
0x010E	0xA4D8      	BTFSS       STATUS, 2 
;__Lib_SPI_c345b123.c,64 :: 		
0x0110	0x8CC7      	BSF         SSP1STAT, 6 
L_SPI1_Init_Advanced5:
;__Lib_SPI_c345b123.c,65 :: 		
L_SPI1_Init_Advanced4:
;__Lib_SPI_c345b123.c,66 :: 		
0x0112	0x8AC6      	BSF         SSP1CON1, 5 
;__Lib_SPI_c345b123.c,67 :: 		
L_end_SPI1_Init_Advanced:
0x0114	0x0012      	RETURN      0
; end of _SPI1_Init_Advanced
_EnviarMensajeSPI:
;RPi_Simulacion.c,88 :: 		void EnviarMensajeSPI(unsigned char *trama, unsigned short sizePDU){
;RPi_Simulacion.c,89 :: 		CS = 0;
0x0116	0x9482      	BCF         RC2_bit, BitPos(RC2_bit+0) 
;RPi_Simulacion.c,90 :: 		for (x=0;x<sizePDU;x++){
0x0118	0x6A3E      	CLRF        _x 
L_EnviarMensajeSPI1:
0x011A	0x0E80      	MOVLW       128
0x011C	0xBE3E      	BTFSC       _x, 7 
0x011E	0x0E7F      	MOVLW       127
0x0120	0x6E00      	MOVWF       R0 
0x0122	0x0E80      	MOVLW       128
0x0124	0x5C00      	SUBWF       R0, 0 
0x0126	0xE102      	BNZ         L__EnviarMensajeSPI48
0x0128	0x5051      	MOVF        FARG_EnviarMensajeSPI_sizePDU, 0 
0x012A	0x5C3E      	SUBWF       _x, 0 
L__EnviarMensajeSPI48:
0x012C	0xE216      	BC          L_EnviarMensajeSPI2
;RPi_Simulacion.c,91 :: 		SSPBUF = trama[x];                             //Llena el buffer de salida con cada valor de la tramaSPI
0x012E	0x503E      	MOVF        _x, 0 
0x0130	0x244F      	ADDWF       FARG_EnviarMensajeSPI_trama, 0 
0x0132	0x6EE9      	MOVWF       FSR0L 
0x0134	0x0E00      	MOVLW       0
0x0136	0xBE3E      	BTFSC       _x, 7 
0x0138	0x0EFF      	MOVLW       255
0x013A	0x2050      	ADDWFC      FARG_EnviarMensajeSPI_trama+1, 0 
0x013C	0x6EEA      	MOVWF       FSR0H 
0x013E	0xFFC9CFEE  	MOVFF       POSTINC0, SSPBUF
;RPi_Simulacion.c,92 :: 		Delay_ms(1);
0x0142	0x0E03      	MOVLW       3
0x0144	0x6E0C      	MOVWF       R12, 0
0x0146	0x0E97      	MOVLW       151
0x0148	0x6E0D      	MOVWF       R13, 0
L_EnviarMensajeSPI4:
0x014A	0x2E0D      	DECFSZ      R13, 1, 0
0x014C	0xD7FE      	BRA         L_EnviarMensajeSPI4
0x014E	0x2E0C      	DECFSZ      R12, 1, 0
0x0150	0xD7FC      	BRA         L_EnviarMensajeSPI4
0x0152	0x0000      	NOP
0x0154	0x0000      	NOP
;RPi_Simulacion.c,90 :: 		for (x=0;x<sizePDU;x++){
0x0156	0x2A3E      	INCF        _x, 1 
;RPi_Simulacion.c,93 :: 		}
0x0158	0xD7E0      	BRA         L_EnviarMensajeSPI1
L_EnviarMensajeSPI2:
;RPi_Simulacion.c,94 :: 		CS = 1;
0x015A	0x8482      	BSF         RC2_bit, BitPos(RC2_bit+0) 
;RPi_Simulacion.c,95 :: 		}
L_end_EnviarMensajeSPI:
0x015C	0x0012      	RETURN      0
; end of _EnviarMensajeSPI
_ConfiguracionPrincipal:
;RPi_Simulacion.c,53 :: 		void ConfiguracionPrincipal(){
;RPi_Simulacion.c,55 :: 		ANSELB = 0;                                        //Configura PORTB como digital
0x015E	0x010F      	MOVLB       15
0x0160	0x6B39      	CLRF        ANSELB, 1
;RPi_Simulacion.c,56 :: 		ANSELC = 0;                                        //Configura PORTC como digital
0x0162	0x6B3A      	CLRF        ANSELC, 1
;RPi_Simulacion.c,58 :: 		TRISB0_bit = 1;
0x0164	0x8093      	BSF         TRISB0_bit, BitPos(TRISB0_bit+0) 
;RPi_Simulacion.c,59 :: 		TRISB1_bit = 1;
0x0166	0x8293      	BSF         TRISB1_bit, BitPos(TRISB1_bit+0) 
;RPi_Simulacion.c,60 :: 		TRISC2_bit = 0;
0x0168	0x9494      	BCF         TRISC2_bit, BitPos(TRISC2_bit+0) 
;RPi_Simulacion.c,62 :: 		INTCON.GIE = 1;                                    //Habilita las interrupciones globales
0x016A	0x8EF2      	BSF         INTCON, 7 
;RPi_Simulacion.c,63 :: 		INTCON.PEIE = 1;                                   //Habilita las interrupciones perifericas
0x016C	0x8CF2      	BSF         INTCON, 6 
;RPi_Simulacion.c,66 :: 		UART1_Init(19200);                                 //Inicializa el UART1 a 19200 bps
0x016E	0x86B8      	BSF         BAUDCON, 3, 0
0x0170	0x6AB0      	CLRF        SPBRGH 
0x0172	0x0E67      	MOVLW       103
0x0174	0x6EAF      	MOVWF       SPBRG 
0x0176	0x84AC      	BSF         TXSTA, 2, 0
0x0178	0xDF77      	RCALL       _UART1_Init
;RPi_Simulacion.c,70 :: 		SPI1_Init_Advanced(_SPI_MASTER_OSC_DIV4,_SPI_DATA_SAMPLE_END,_SPI_CLK_IDLE_HIGH,_SPI_HIGH_2_LOW);
0x017A	0x6A4B      	CLRF        FARG_SPI1_Init_Advanced_master 
0x017C	0x0E80      	MOVLW       128
0x017E	0x6E4C      	MOVWF       FARG_SPI1_Init_Advanced_data_sample 
0x0180	0x0E10      	MOVLW       16
0x0182	0x6E4D      	MOVWF       FARG_SPI1_Init_Advanced_clock_idle 
0x0184	0x6A4E      	CLRF        FARG_SPI1_Init_Advanced_transmit_edge 
0x0186	0xDF9B      	RCALL       _SPI1_Init_Advanced
;RPi_Simulacion.c,73 :: 		INTCON.INT0IE = 1;                                 //Habilita la interrupcion externa INT0
0x0188	0x88F2      	BSF         INTCON, 4 
;RPi_Simulacion.c,74 :: 		INTCON.INT0IF = 0;                                 //Limpia la bandera de interrupcion externa INT0
0x018A	0x92F2      	BCF         INTCON, 1 
;RPi_Simulacion.c,80 :: 		Delay_ms(100);                                     //Espera hasta que se estabilicen los cambios
0x018C	0x0E02      	MOVLW       2
0x018E	0x6E0B      	MOVWF       R11, 0
0x0190	0x0E04      	MOVLW       4
0x0192	0x6E0C      	MOVWF       R12, 0
0x0194	0x0EBA      	MOVLW       186
0x0196	0x6E0D      	MOVWF       R13, 0
L_ConfiguracionPrincipal0:
0x0198	0x2E0D      	DECFSZ      R13, 1, 0
0x019A	0xD7FE      	BRA         L_ConfiguracionPrincipal0
0x019C	0x2E0C      	DECFSZ      R12, 1, 0
0x019E	0xD7FC      	BRA         L_ConfiguracionPrincipal0
0x01A0	0x2E0B      	DECFSZ      R11, 1, 0
0x01A2	0xD7FA      	BRA         L_ConfiguracionPrincipal0
0x01A4	0x0000      	NOP
;RPi_Simulacion.c,82 :: 		}
L_end_ConfiguracionPrincipal:
0x01A6	0x0012      	RETURN      0
; end of _ConfiguracionPrincipal
_ProbarSPI:
;RPi_Simulacion.c,152 :: 		void ProbarSPI(){
;RPi_Simulacion.c,153 :: 		tramaSPI[0] = 0x00;
0x01A8	0x6A28      	CLRF        _tramaSPI 
;RPi_Simulacion.c,154 :: 		tramaSPI[1] = 0x01;
0x01AA	0x0E01      	MOVLW       1
0x01AC	0x6E29      	MOVWF       _tramaSPI+1 
;RPi_Simulacion.c,155 :: 		tramaSPI[2] = 0x02;
0x01AE	0x0E02      	MOVLW       2
0x01B0	0x6E2A      	MOVWF       _tramaSPI+2 
;RPi_Simulacion.c,156 :: 		tramaSPI[3] = 0x03;
0x01B2	0x0E03      	MOVLW       3
0x01B4	0x6E2B      	MOVWF       _tramaSPI+3 
;RPi_Simulacion.c,157 :: 		tramaSPI[4] = 0x04;
0x01B6	0x0E04      	MOVLW       4
0x01B8	0x6E2C      	MOVWF       _tramaSPI+4 
;RPi_Simulacion.c,158 :: 		tramaSPI[5] = 0x05;
0x01BA	0x0E05      	MOVLW       5
0x01BC	0x6E2D      	MOVWF       _tramaSPI+5 
;RPi_Simulacion.c,159 :: 		tramaSPI[6] = 0x06;
0x01BE	0x0E06      	MOVLW       6
0x01C0	0x6E2E      	MOVWF       _tramaSPI+6 
;RPi_Simulacion.c,160 :: 		tramaSPI[7] = 0x07;
0x01C2	0x0E07      	MOVLW       7
0x01C4	0x6E2F      	MOVWF       _tramaSPI+7 
;RPi_Simulacion.c,161 :: 		tramaSPI[8] = 0x08;
0x01C6	0x0E08      	MOVLW       8
0x01C8	0x6E30      	MOVWF       _tramaSPI+8 
;RPi_Simulacion.c,162 :: 		tramaSPI[9] = 0x09;
0x01CA	0x0E09      	MOVLW       9
0x01CC	0x6E31      	MOVWF       _tramaSPI+9 
;RPi_Simulacion.c,163 :: 		CS = 0;
0x01CE	0x9482      	BCF         RC2_bit, BitPos(RC2_bit+0) 
;RPi_Simulacion.c,164 :: 		SSPBUF = 0xB0;
0x01D0	0x0EB0      	MOVLW       176
0x01D2	0x6EC9      	MOVWF       SSPBUF 
;RPi_Simulacion.c,165 :: 		Delay_us(10);
0x01D4	0x0E06      	MOVLW       6
0x01D6	0x6E0D      	MOVWF       R13, 0
L_ProbarSPI27:
0x01D8	0x2E0D      	DECFSZ      R13, 1, 0
0x01DA	0xD7FE      	BRA         L_ProbarSPI27
0x01DC	0x0000      	NOP
;RPi_Simulacion.c,166 :: 		for (x=0;x<10;x++){
0x01DE	0x6A3E      	CLRF        _x 
L_ProbarSPI28:
0x01E0	0x0E80      	MOVLW       128
0x01E2	0x183E      	XORWF       _x, 0 
0x01E4	0x6E00      	MOVWF       R0 
0x01E6	0x0E80      	MOVLW       128
0x01E8	0x0A0A      	XORLW       10
0x01EA	0x5C00      	SUBWF       R0, 0 
0x01EC	0xE213      	BC          L_ProbarSPI29
;RPi_Simulacion.c,167 :: 		SSPBUF = tramaSPI[x];                          //Llena el buffer de salida con cada valor de la tramaSPI
0x01EE	0x0E28      	MOVLW       _tramaSPI
0x01F0	0x6EE9      	MOVWF       FSR0L 
0x01F2	0x0E00      	MOVLW       hi_addr(_tramaSPI)
0x01F4	0x6EEA      	MOVWF       FSR0H 
0x01F6	0x503E      	MOVF        _x, 0 
0x01F8	0x26E9      	ADDWF       FSR0L, 1 
0x01FA	0x0E00      	MOVLW       0
0x01FC	0xBE3E      	BTFSC       _x, 7 
0x01FE	0x0EFF      	MOVLW       255
0x0200	0x22EA      	ADDWFC      FSR0H, 1 
0x0202	0xFFC9CFEE  	MOVFF       POSTINC0, SSPBUF
;RPi_Simulacion.c,168 :: 		Delay_us(10);
0x0206	0x0E06      	MOVLW       6
0x0208	0x6E0D      	MOVWF       R13, 0
L_ProbarSPI31:
0x020A	0x2E0D      	DECFSZ      R13, 1, 0
0x020C	0xD7FE      	BRA         L_ProbarSPI31
0x020E	0x0000      	NOP
;RPi_Simulacion.c,166 :: 		for (x=0;x<10;x++){
0x0210	0x2A3E      	INCF        _x, 1 
;RPi_Simulacion.c,169 :: 		}
0x0212	0xD7E6      	BRA         L_ProbarSPI28
L_ProbarSPI29:
;RPi_Simulacion.c,170 :: 		SSPBUF = 0xB1;
0x0214	0x0EB1      	MOVLW       177
0x0216	0x6EC9      	MOVWF       SSPBUF 
;RPi_Simulacion.c,171 :: 		Delay_us(10);
0x0218	0x0E06      	MOVLW       6
0x021A	0x6E0D      	MOVWF       R13, 0
L_ProbarSPI32:
0x021C	0x2E0D      	DECFSZ      R13, 1, 0
0x021E	0xD7FE      	BRA         L_ProbarSPI32
0x0220	0x0000      	NOP
;RPi_Simulacion.c,172 :: 		CS = 1;
0x0222	0x8482      	BSF         RC2_bit, BitPos(RC2_bit+0) 
;RPi_Simulacion.c,173 :: 		}
L_end_ProbarSPI:
0x0224	0x0012      	RETURN      0
; end of _ProbarSPI
_main:
;RPi_Simulacion.c,247 :: 		void main() {
;RPi_Simulacion.c,249 :: 		ConfiguracionPrincipal();
0x0226	0xDF9B      	RCALL       _ConfiguracionPrincipal
;RPi_Simulacion.c,250 :: 		CS = 1;
0x0228	0x8482      	BSF         RC2_bit, BitPos(RC2_bit+0) 
;RPi_Simulacion.c,251 :: 		byteTrama = 0;                                       //Limpia la variable del byte de la trama de peticion
0x022A	0x6A38      	CLRF        _byteTrama 
;RPi_Simulacion.c,252 :: 		banTI = 0;                                           //Limpia la bandera de inicio de trama
0x022C	0x6A37      	CLRF        _banTI 
;RPi_Simulacion.c,253 :: 		banTC = 0;                                           //Limpia la bandera de trama completa
0x022E	0x6A27      	CLRF        _banTC 
;RPi_Simulacion.c,254 :: 		banTF = 0;                                           //Limpia la bandera de final de trama
0x0230	0x6A1E      	CLRF        _banTF 
;RPi_Simulacion.c,256 :: 		while(1){
L_main42:
;RPi_Simulacion.c,258 :: 		ProbarSPI();
0x0232	0xDFBA      	RCALL       _ProbarSPI
;RPi_Simulacion.c,259 :: 		Delay_ms(1000);
0x0234	0x0E0B      	MOVLW       11
0x0236	0x6E0B      	MOVWF       R11, 0
0x0238	0x0E26      	MOVLW       38
0x023A	0x6E0C      	MOVWF       R12, 0
0x023C	0x0E5D      	MOVLW       93
0x023E	0x6E0D      	MOVWF       R13, 0
L_main44:
0x0240	0x2E0D      	DECFSZ      R13, 1, 0
0x0242	0xD7FE      	BRA         L_main44
0x0244	0x2E0C      	DECFSZ      R12, 1, 0
0x0246	0xD7FC      	BRA         L_main44
0x0248	0x2E0B      	DECFSZ      R11, 1, 0
0x024A	0xD7FA      	BRA         L_main44
0x024C	0x0000      	NOP
0x024E	0x0000      	NOP
;RPi_Simulacion.c,261 :: 		}
0x0250	0xD7F0      	BRA         L_main42
;RPi_Simulacion.c,263 :: 		}
L_end_main:
0x0252	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [96]    _interrupt
0x0068      [86]    _UART1_Init
0x00BE      [88]    _SPI1_Init_Advanced
0x0116      [72]    _EnviarMensajeSPI
0x015E      [74]    _ConfiguracionPrincipal
0x01A8     [126]    _ProbarSPI
0x0226      [46]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    SPI2_Write_tmp_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    R0
0x0000       [1]    UART2_Init_tmp_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0001       [1]    R1
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    UART2_Read___tmp_UART2_Read_L0
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x001A       [4]    _SPI_Rd_Ptr
0x001E       [1]    _banTF
0x001F       [4]    _UART_Wr_Ptr
0x0023       [4]    _SPI_Wr_Ptr
0x0027       [1]    _banTC
0x0028      [15]    _tramaSPI
0x0037       [1]    _banTI
0x0038       [1]    _byteTrama
0x0039       [4]    _UART_Rd_Ptr
0x003D       [1]    _funcionRpi
0x003E       [1]    _x
0x003F       [4]    _UART_Tx_Idle_Ptr
0x0043       [1]    _direccionRpi
0x0044       [1]    _numDatos
0x0045       [1]    _tipoDato
0x0046       [1]    _registroRPi
0x0047       [4]    _UART_Rdy_Ptr
0x004B       [1]    FARG_SPI1_Init_Advanced_master
0x004C       [1]    FARG_SPI1_Init_Advanced_data_sample
0x004D       [1]    FARG_SPI1_Init_Advanced_clock_idle
0x004E       [1]    FARG_SPI1_Init_Advanced_transmit_edge
0x004F       [2]    FARG_EnviarMensajeSPI_trama
0x0051       [1]    FARG_EnviarMensajeSPI_sizePDU
0x0F39       [1]    ANSELB
0x0F3A       [1]    ANSELC
0x0F82       [0]    RC2_bit
0x0F82       [0]    CS
0x0F93       [0]    TRISB1_bit
0x0F93       [0]    TRISB0_bit
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    TRISC6_bit
0x0F94       [0]    TRISC3_bit
0x0F94       [0]    TRISC2_bit
0x0F94       [0]    TRISC4_bit
0x0F94       [0]    TRISC5_bit
0x0F9E       [1]    PIR1
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB8       [1]    BAUDCON
0x0FC6       [1]    SSP1CON1
0x0FC7       [1]    SSP1STAT
0x0FC9       [1]    SSPBUF
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF0       [1]    INTCON3
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
